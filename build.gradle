plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.6.0'
}

group = 'br.com.poatransporte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'io.r2dbc:r2dbc-postgresql'
    runtimeOnly 'org.postgresql:postgresql'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

check {
    dependsOn jacocoTestCoverageVerification
}
build {
    dependsOn 'pitest'
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestCoverageVerification {
//    afterEvaluate {
//        classDirectories.from = files(classDirectories.files.collect {
//            fileTree(dir: it, exclude:  [
//                    'br/com/poatransporte/config/*',
//                    'br/com/poatransporte/PoaTransporteApplication*'
//            ])
//        })
//    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/poatransporte/config/**'
            ])
        })
    }
    violationRules {
        rule {
//            element = 'PACKAGE'
//            excludes = ['br/com/poatransporte/config/*',
//                       'br/com/poatransporte/PoaTransporteApplication*']
            limit {
//                counter = 'LINE'
                minimum = 1.0
            }
        }
    }
}

//jacocoTestReport {
//    dependsOn test
//    reports {
//        xml.enabled false
//        csv.enabled false
//    }
//
//}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'br/com/poatransporte/config/**'
            ])
        })
    }
}
test.finalizedBy(project.tasks.jacocoTestReport)
pitest {
    junit5PluginVersion = '0.12'
    timestampedReports = false
    mutationThreshold = 100
    excludedClasses = ['br.com.poatransporte.config.*']
}